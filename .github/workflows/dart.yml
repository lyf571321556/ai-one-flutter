name: ones-mobile-ci

on:
  push:
    branches:
      - "F[0-9]+"
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches: []
env:
  FLUTTER_VERSION: '1.21.0-9.1.pre'
  FLUTTER_CHANNEL: 'beta'
jobs:
  android-build-job:
    name: Build for android
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2
        with:
          submodules: false
      - name: Extract branch or tag name
        shell: bash
        run: |
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
        id: CURRENT_TAG_OR_TAG
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: ${{ env.FLUTTER_CHANNEL }}
      - name: Build apk with shell
        env:
          CURRENT_TAG: ${{ steps.CURRENT_TAG_OR_TAG.outputs.SOURCE_TAG }}
          CURRENT_BRANCH: ${{ steps.CURRENT_TAG_OR_TAG.outputs.SOURCE_BRANCH }}
        run: bash ./android/build.sh
      - name: upload artifact to Actions
        if: ${{ steps.CURRENT_TAG_OR_TAG.outputs.SOURCE_BRANCH }} =~ F[0-9]+
        uses: actions/upload-artifact@v2
        with:
          name: ones-mobile-${{ steps.CURRENT_TAG_OR_TAG.outputs.SOURCE_BRANCH }}.apk
          path: "./build/app/outputs/apk/preview/release/app-preview-release.apk"
      - name: upload artifact to Github Release
        if: ${{ steps.CURRENT_TAG_OR_TAG.outputs.SOURCE_TAG }} =~ v[0-9]+.[0-9]+.[0-9]+
        uses: ncipollo/release-action@v1
        with:
          bodyFile: ones-mobile-${{ steps.CURRENT_TAG_OR_TAG.outputs.SOURCE_TAG }}.apk
          artifacts: "./build/app/outputs/apk/release/app-release.apk"
          token: ${{ secrets.RELEASE_GITHUB_TOKEN }}

  web-build-job:
    name: Build for web
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2
        with:
          submodules: false
      - name: Extract branch or tag name
        shell: bash
        run: |
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
        id: CURRENT_TAG_OR_TAG
      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: ${{ env.FLUTTER_CHANNEL }}
      - name: build web with shell
        env:
          CURRENT_TAG: ${{ steps.CURRENT_TAG_OR_TAG.outputs.SOURCE_TAG }}
          CURRENT_BRANCH: ${{ steps.CURRENT_TAG_OR_TAG.outputs.SOURCE_BRANCH }}
        run: bash ./web/build.sh
      - name: upload artifact to Actions
        if: ${{ steps.CURRENT_TAG_OR_TAG.outputs.SOURCE_BRANCH }} =~ F[0-9]+
        uses: actions/upload-artifact@v2
        with:
          name: ones-mobile-web-${{ steps.CURRENT_TAG_OR_TAG.outputs.SOURCE_BRANCH }}.tar.gz
          path: "ones-ai-mobile-web*.tar.gz"
      - name: upload artifact to Github Release
        if: ${{ steps.CURRENT_TAG_OR_TAG.outputs.SOURCE_TAG }} =~ v[0-9]+.[0-9]+.[0-9]+
        uses: ncipollo/release-action@v1
        with:
          bodyFile: ones-mobile-web-${{ steps.CURRENT_TAG_OR_TAG.outputs.SOURCE_TAG }}.tar.gz
          artifacts: "ones-ai-mobile-web*.tar.gz"
          token: ${{ secrets.RELEASE_GITHUB_TOKEN }}
#  ios-build-job:
#    name: Build for iOS
#    runs-on: macOS-latest
#    steps:
#      - name: checkout code
#        uses: actions/checkout@v2
#        with:
#          submodules: false
#      - name: Extract branch or tag name
#        shell: bash
#        run: |
#          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
#          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
#        id: CURRENT_TAG_OR_TAG
#      - name: Setup Flutter
#        uses: subosito/flutter-action@v1
#        with:
#          flutter-version: ${{ env.FLUTTER_VERSION }}
#          channel: ${{ env.FLUTTER_CHANNEL }}
#      - name: build iOS with fastlane
#        env:
#          CURRENT_TAG: ${{ steps.CURRENT_TAG_OR_TAG.outputs.SOURCE_TAG }}
#          CURRENT_BRANCH: ${{ steps.CURRENT_TAG_OR_TAG.outputs.SOURCE_BRANCH }}
#          APPCENTER_API_TOKEN_IOS: ${{ secrets.APPCENTER_API_TOKEN_IOS }}
#          APPCENTER_APP_NAME_IOS: ${{ secrets.APPCENTER_APP_NAME_IOS }}
#          APPCENTER_OWNER_NAME: ${{ secrets.APPCENTER_OWNER_NAME }}
#          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
#          FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
#          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
#          PGY_API_KEY: ${{ secrets.PGY_API_KEY }}
#          PGY_USER_KEY: ${{ secrets.PGY_USER_KEY }}
#          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
#        run: sh ./ios/build.sh